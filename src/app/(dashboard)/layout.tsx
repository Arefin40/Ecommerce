import "../globals.css";
import Link from "next/link";
import Image from "next/image";
import { cn } from "@/lib/utils";
import { Toaster } from "react-hot-toast";
import { Mulish as FontSans } from "next/font/google";
import { PanelLeft } from "lucide-react";
import { DashboardBlocks } from "@/icons";
import { DashboardMenuItems } from "@/lib/data/dashboard";
import { redirect } from "next/navigation";
import { auth } from "@/lib/auth";
import { headers } from "next/headers";
import type { Metadata } from "next";
import UserDropdown from "./UserDropdown";

const fontSans = FontSans({
   variable: "--font-sans",
   subsets: ["latin"]
});

export const metadata: Metadata = {
   title: {
      template: "%s | SHOBAI",
      default: "SHOBAI"
   },
   description: "Generated by create next app"
};

export default async function RootLayout({
   children
}: Readonly<{
   children: React.ReactNode;
}>) {
   const session = await auth.api.getSession({ headers: await headers() });
   if (!session?.user) redirect("/admin");

   const role = session.user.role as keyof typeof DashboardMenuItems;
   if (!(role === "admin" || role === "merchant")) redirect("/login");

   return (
      <html lang="en">
         <body
            className={`${fontSans.variable} bg-background relative grid h-screen grid-cols-[18rem_1fr] font-sans font-medium antialiased`}
         >
            <Toaster />

            <aside className="border-border flex h-full flex-col border-r bg-white">
               <div className="px-6">
                  <div className="border-border flex h-16 items-center justify-between border-b">
                     <Link href="/" className="flex items-center gap-x-2">
                        <Image
                           priority
                           src="/images/Logo.svg"
                           alt="Logo"
                           width={105}
                           height={20}
                           className="h-5"
                        />
                     </Link>

                     <button>
                        <PanelLeft
                           size={20}
                           strokeWidth={1.5}
                           className="text-muted-foreground hover:text-foreground"
                        />
                     </button>
                  </div>
               </div>

               <div className="flex flex-1 flex-col py-4">
                  <ul className="flex flex-col space-y-2">
                     <DashboardMenuItem active href="/dashboard" icon={<DashboardBlocks />}>
                        Dashboard
                     </DashboardMenuItem>
                     {DashboardMenuItems[role].map((item) => (
                        <DashboardMenuItem key={item.name} href={item.href} icon={<item.icon />}>
                           {item.name}
                        </DashboardMenuItem>
                     ))}
                  </ul>
               </div>

               <div className="px-6">
                  <UserDropdown />
               </div>
            </aside>

            {children}
         </body>
      </html>
   );
}

type DashboardMenuItemProps = React.ComponentProps<"li"> & {
   href: string;
   active?: boolean;
   icon: React.ReactNode;
};

const DashboardMenuItem: React.FC<DashboardMenuItemProps> = ({
   children,
   className,
   href,
   icon,
   active = false,
   ...props
}) => {
   return (
      <li className={cn("group relative", className)} {...props}>
         <Link
            href={href}
            className={cn(
               "hover:bg-accent hover:text-accent-foreground mx-6 flex items-center gap-3 rounded-md p-2",
               { "bg-accent text-accent-foreground": active }
            )}
         >
            {icon}
            <p className="font-medium">{children}</p>
         </Link>

         {active && (
            <div className="bg-primary absolute top-1/2 left-0.5 h-8/10 w-1.25 -translate-y-1/2 rounded-r-md" />
         )}
      </li>
   );
};
